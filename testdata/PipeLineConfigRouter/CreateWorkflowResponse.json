{
  "code": 200,
  "status": "OK",
  "result": {
    "id": 152,
    "appId": 418,
    "dockerRegistry": "devtron-quay",
    "dockerRepository": "devtron/nikesh-trial",
    "dockerBuildConfig": {
      "gitMaterialId": 171,
      "dockerfileRelativePath": "Dockerfile"
    },
    "ciPipelines": [
      {
        "isManual": false,
        "dockerArgs": {
          "--progress": "auto"
        },
        "isExternal": false,
        "parentCiPipeline": 0,
        "parentAppId": 0,
        "externalCiConfig": {
          "id": 0,
          "webhookUrl": "",
          "payload": "",
          "accessKey": ""
        },
        "ciMaterial": [
          {
            "source": {
              "type": "SOURCE_TYPE_BRANCH_FIXED",
              "value": "main"
            },
            "gitMaterialId": 171,
            "id": 56,
            "gitMaterialName": "getting-started-nodejs"
          }
        ],
        "name": "ci-352-y1jq",
        "id": 54,
        "active": true,
        "linkedCount": 0,
        "scanEnabled": false,
        "preBuildStage": {
          "id": 0,
          "steps": [
            {
              "id": 1,
              "name": "Task 1",
              "description": "Pre-build-task1",
              "index": 1,
              "stepType": "INLINE",
              "outputDirectoryPath": [
                "/output/task1/script.sh"
              ],
              "inlineStepDetail": {
                "scriptType": "SHELL",
                "script": "#!/bin/sh \nset -eo pipefail \n#set -v  ## uncomment this to debug the script \necho \"====Value of variable1====\"\necho $varibale1\necho \"===exporting OutVariable1===\"\nexport OutVariable1=OutValue1",
                "storeScriptAt": "",
                "mountDirectoryFromHost": false,
                "commandArgsMap": [
                  {
                    "command": "",
                    "args": []
                  }
                ],
                "inputVariables": [
                  {
                    "id": 5,
                    "name": "DOCKER_IMAGE_TAG",
                    "format": "STRING",
                    "description": "DOCKER_IMAGE_TAG",
                    "value": "",
                    "variableType": "GLOBAL",
                    "refVariableName": "DOCKER_IMAGE_TAG",
                    "refVariableStage": ""
                  },
                  {
                    "id": 4,
                    "name": "variableDate",
                    "format": "DATE",
                    "description": "Variable for Date",
                    "value": "Friday, 20 May 2022",
                    "variableType": "NEW",
                    "refVariableStage": ""
                  },
                  {
                    "id": 3,
                    "name": "variableNumber",
                    "format": "NUMBER",
                    "description": "Variable for Numbers",
                    "value": "10",
                    "variableType": "NEW",
                    "refVariableStage": ""
                  },
                  {
                    "id": 2,
                    "name": "IsVariable1Present",
                    "format": "BOOL",
                    "description": "IsVariable1Present",
                    "value": "true",
                    "variableType": "NEW",
                    "refVariableStage": ""
                  },
                  {
                    "id": 1,
                    "name": "variable1",
                    "format": "STRING",
                    "description": "Description of variable 1",
                    "value": "value1",
                    "variableType": "NEW",
                    "refVariableStage": ""
                  }
                ],
                "outputVariables": [
                  {
                    "id": 1,
                    "name": "OutVariable1",
                    "format": "STRING",
                    "description": "Out variable 1",
                    "value": "",
                    "variableType": "NEW",
                    "refVariableStage": ""
                  }
                ],
                "conditionDetails": [
                  {
                    "id": 0,
                    "conditionOnVariable": "IsVariable1Present",
                    "conditionType": "TRIGGER",
                    "conditionOperator": "==",
                    "conditionalValue": "true"
                  },
                  {
                    "id": 1,
                    "conditionOnVariable": "OutVariable1",
                    "conditionType": "PASS",
                    "conditionOperator": "==",
                    "conditionalValue": "OutValue1"
                  }
                ]
              },
              "pluginRefStepDetail": null
            },
            {
              "id": 2,
              "name": "Task 2",
              "description": "Task2 description",
              "index": 2,
              "stepType": "INLINE",
              "outputDirectoryPath": [
                "/save"
              ],
              "inlineStepDetail": {
                "scriptType": "CONTAINER_IMAGE",
                "script": "echo \"hello World\"\necho \"Printing host bin directory\"\nls /host/bin\necho \"Printing source code directory\"\nls /sourcecode",
                "storeScriptAt": "/output/task2/script.sh",
                "mountCodeToContainer": true,
                "mountCodeToContainerPath": "/sourcecode",
                "mountDirectoryFromHost": true,
                "containerImagePath": "alpine:latest",
                "mountPathMap": [
                  {
                    "filePathOnDisk": "/bin",
                    "filePathOnContainer": "/host/bin"
                  }
                ],
                "commandArgsMap": [
                  {
                    "command": "sh",
                    "args": [
                      "/output/task2/script.sh"
                    ]
                  }
                ],
                "portMap": [
                  {
                    "portOnLocal": 8080,
                    "portOnContainer": 80
                  }
                ],
                "inputVariables": [
                  {
                    "id": 1,
                    "name": "outVariable1FromTask1",
                    "format": "STRING",
                    "description": "out Variable 1 From Task1",
                    "value": "",
                    "variableType": "FROM_PREVIOUS_STEP",
                    "refVariableStepIndex": 1,
                    "refVariableName": "OutVariable1",
                    "refVariableStage": "PRE_CI"
                  }
                ],
                "outputVariables": null,
                "conditionDetails": [
                  {
                    "id": 0,
                    "conditionOnVariable": "outVariable1FromTask1",
                    "conditionType": "SKIP",
                    "conditionOperator": "!=",
                    "conditionalValue": "OutValue1"
                  }
                ]
              },
              "pluginRefStepDetail": null
            }
          ]
        },
        "postBuildStage": {
          "id": 0,
          "steps": [
            {
              "id": 1,
              "name": "Sonarqube",
              "description": "Enhance Your Workflow with Continuous Code Quality & Code Security.",
              "index": 1,
              "stepType": "REF_PLUGIN",
              "outputDirectoryPath": null,
              "inlineStepDetail": null,
              "pluginRefStepDetail": {
                "pluginId": 2,
                "inputVariables": [
                  {
                    "id": 6,
                    "name": "SonarqubeProjectKey",
                    "format": "STRING",
                    "description": "project key of grafana sonarqube account",
                    "isExposed": true,
                    "allowEmptyValue": true,
                    "value": "test-sonarqube",
                    "variableType": "NEW",
                    "variableStepIndexInPlugin": 1,
                    "refVariableStage": ""
                  },
                  {
                    "id": 7,
                    "name": "SonarqubeApiKey",
                    "format": "STRING",
                    "description": "api key of sonarqube account",
                    "isExposed": true,
                    "allowEmptyValue": true,
                    "value": "eyJrIjoiMjBhZGNlNzYwMzUyZGE5Nzc0YWUzZTFkMWY0MzlhNjZmN2ZkMTMzYyIsIm4iOiJkZXZ0cm9uLWFwaS1rZXkiLCJpZCI6NjQxMzkyfQ==",
                    "variableType": "NEW",
                    "variableStepIndexInPlugin": 1,
                    "refVariableStage": ""
                  },
                  {
                    "id": 8,
                    "name": "SonarqubeEndpoint",
                    "format": "STRING",
                    "description": "api endpoint of sonarqube account",
                    "isExposed": true,
                    "allowEmptyValue": true,
                    "value": "https://sonarqube.devtron.info:32443/",
                    "variableType": "NEW",
                    "variableStepIndexInPlugin": 1,
                    "refVariableStage": ""
                  },
                  {
                    "id": 9,
                    "name": "CheckoutPath",
                    "format": "STRING",
                    "description": "checkout path of git material",
                    "isExposed": true,
                    "allowEmptyValue": true,
                    "value": "./",
                    "variableType": "NEW",
                    "variableStepIndexInPlugin": 1,
                    "refVariableStage": ""
                  }
                ],
                "outputVariables": null,
                "conditionDetails": [
                  {
                    "id": 0,
                    "conditionOnVariable": "SonarqubeProjectKey",
                    "conditionType": "TRIGGER",
                    "conditionOperator": "==",
                    "conditionalValue": "test-sonarqube"
                  }
                ]
              }
            }
          ]
        }
      }
    ],
    "appName": "nikesh-trial",
    "materials": [
      {
        "gitMaterialId": 171,
        "materialName": "getting-started-nodejs"
      }
    ],
    "appWorkflowId": 54,
    "scanEnabled": false
  }
}